const{native:b}=window.enmity;function P(){b.reload()}b.version,b.build,b.device,b.version;function U(e){window.enmity.plugins.registerPlugin(e)}const d=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const v=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const _=window.enmity.modules.common.Storage,S=window.enmity.modules.common.Toasts,g=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const L=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme;const k=window.enmity.modules.common.Linking,R=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const V=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const M=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const p=o.Text;o.TextInput,o.TouchableHighlight;const h=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const f=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const $=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const r=o.FormRow,x=o.FormSection;o.FormSelect,o.FormSubLabel;const O=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const E={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function F(...e){return window.enmity.modules.bulk(...e)}function Y(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const I=e=>{let t=0;for(let s in e)t++;return t};function i(e){return window.enmity.assets.getIDByName(e)}const c={Debug:i("debug"),Retry:i("ic_message_retry"),Failed:i("Small"),Cancel:i("ic_megaphone_nsfw_16px"),Add:i("add_white"),Delete:i("ic_message_delete"),Clear:i("ic_clear_all_24px"),Pencil:i("ic_pencil_24px"),Success:i("ic_selection_checked_24px"),Warning:i("ic_warning_24px"),Copy:i("toast_copy_link"),Open:i("ic_leave_stage"),Clipboard:i("pending-alert"),Initial:i("coffee"),Shield:i("ic_person_shield"),Debug_Command:{Sent:i("ic_application_command_24px"),Clock:i("clock")},Settings:{Toasts:{Context:i("toast_image_saved"),Settings:i("ic_selection_checked_24px")},Self:i("friends_toast_icon"),Share:i("share"),Robot:i("ic_robot_24px"),Commands:i("ic_profile_badge_bot_commands"),Debug:i("ic_rulebook_16px")}},C=e=>{S.open({content:`Copied ${e} to clipboard.`,source:c.Clipboard})},G=e=>{let t=e.split(`
`).map(s=>{if(s!="")return`"${s.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[I(t)]=`${t[I(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function j(){try{let e=await _.getItem("device_list");if(e)return JSON.parse(e);let t=(await L.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,s=G(t);await _.setItem("device_list",s);let a=await _.getItem("device_list");return JSON.parse(a)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function z(e,t,s){let a=await j();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${s.split("-")[1]}
> **Discord Build:** ${v.InfoDictionaryManager.Version} (${v.InfoDictionaryManager.Build})
> **Software Version:** ${v.DCDDeviceManager.systemVersion}
> **Device:** ${a[v.DCDDeviceManager.device]}`}const W=Y("transitionToGuild");async function H({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,s=await(await L.get(t)).text;let a=s.match(/\d\.\d\.\d+/g),l=s.match(/patch\-\d\.\d\.\d+/g);return!a||!l?B(e.name,e.version):(a=a[0],l=l[0],a!=e.version?A(t,a,l.split("-")[1],e,!1):l!=e.build?A(t,a,l.split("-")[1],e,!0):B(e.name,e.version))}const A=(e,t,s,a,l)=>{const u=l?s:t;g.show({title:"Update found",body:`A newer ${l?"build":"version"} is available for ${a.name}. ${l?`
The version will remain at ${t}, but the build will update to ${s}.`:""}
Would you like to install ${l?`build \`${s}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>q(e,u,a,l)})},B=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),S.open({content:`${e} is on latest version (${t})`,source:c.Success})};async function q(e,t,s,a){window.enmity.plugins.installPlugin(e,({data:l})=>{l=="installed_plugin"||l=="overridden_plugin"?g.show({title:`Updated ${s.name}`,body:`Successfully updated to ${a?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{P()}}):g.show({title:"Error",body:`Something went wrong while updating ${s.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{W.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${s.name}%20Update%20Error%3A%20${a?`b${t}`:`v${t}`}`)}})})}const D=window.enmity.modules.common.Components.General.Animated,[T,J]=F(E.byProps("transitionToGuild"),E.byProps("setString")),m=R.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25,fontFamily:d.Fonts.DISPLAY_NORMAL},header:{color:d.ThemeColorMap.HEADER_PRIMARY,fontFamily:d.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:d.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}});var K=({manifest:e})=>{const t=n.useRef(new D.Value(1)).current,s=()=>{D.spring(t,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},a=()=>{D.spring(t,{toValue:1,duration:250,useNativeDriver:!0}).start()},l=()=>{T.openURL("https://spin.rip/")},u={transform:[{scale:t}]};return n.createElement(n.Fragment,null,n.createElement(f,{style:m.container},n.createElement(h,{onPress:l,onPressIn:s,onPressOut:a},n.createElement(D.View,{style:[u]},n.createElement(V,{style:[m.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(f,{style:m.text_container},n.createElement(h,{onPress:()=>{T.openURL(e.sourceUrl)}},n.createElement(p,{style:[m.main_text,m.header]},e.name," ")),n.createElement(f,{style:{flexDirection:"row"}},n.createElement(p,{style:[m.main_text,m.sub_header]},"A plugin by"),n.createElement(h,{onPress:()=>{T.openURL("https://spin.rip/")}},n.createElement(p,{style:[m.main_text,m.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(f,{style:{flexDirection:"row"}},n.createElement(p,{style:[m.main_text,m.sub_header]},"Settings page by"),n.createElement(h,{onPress:()=>{T.openURL("https://github.com/acquitelol/")}},n.createElement(p,{style:[m.main_text,m.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},"Rosie<3"))),n.createElement(f,null,n.createElement(h,{style:{flexDirection:"row"},onPress:()=>{J.setString(`**${e.name}** v${e.version}`),C("plugin name and version")}},n.createElement(p,{style:[m.main_text,m.sub_header]},"Version:"),n.createElement(p,{style:[m.main_text,m.sub_header,{paddingLeft:4,fontFamily:d.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[X,N]=F(E.byProps("transitionToGuild","openURL"),E.byProps("setString","getString")),w=R.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:d.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:d.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}});var Q=({manifest:e,settings:t,hasToasts:s,children:a,commands:l})=>n.createElement(M,null,n.createElement(K,{manifest:e}),a,l&&n.createElement(x,{title:"Plugin Commands"},l.map(u=>n.createElement(r,{label:`/${u.name}`,subLabel:u.description,leading:n.createElement(r.Icon,{style:w.icon,source:c.Settings.Commands}),trailing:r.Arrow,onPress:function(){N.setString(`/${u.name}`),C(`the command ${u.name}`)}}))),n.createElement(x,{title:"Utility"},s&&n.createElement(n.Fragment,null,n.createElement(r,{label:"Initialization Toasts",leading:n.createElement(r.Icon,{style:w.icon,source:c.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(O,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),S.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:c.Success})}})}),n.createElement($,null)),n.createElement(r,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(r.Icon,{style:w.icon,source:c.Settings.Debug}),trailing:r.Arrow,onPress:async function(){N.setString(await z(e.name,e.version,e.build)),C("plugin debug information")}}),n.createElement($,null),n.createElement(r,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(r.Icon,{style:w.icon,source:c.Delete}),trailing:r.Arrow,onPress:async function(){await _.removeItem("device_list"),S.open({content:"Cleared device list storage.",source:c.Success})}})),n.createElement(x,{title:"Source"},n.createElement(r,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(r.Icon,{style:w.icon,source:c.Copy}),trailing:r.Arrow,onPress:()=>{H({manifest:e})}}),n.createElement($,null),n.createElement(r,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(r.Icon,{style:w.icon,source:c.Open}),trailing:r.Arrow,onPress:()=>{X.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(r,{style:w.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})),Z="ReviewDB",ee="1.8.0",te="patch-1.2.0",ne="(DEPRECATED VERSION) Review other users. These reviews are visible to anyone with this type of plugin on any platform.",oe=[{name:"spin",id:"308440976723148800"},{name:"Rosie<3",id:"581573474296791211",profile:"https://github.com/acquitelol"}],ie="#ff0069",se="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/ReviewDB.js",ae="https://manti.vendicated.dev",y={name:Z,version:ee,build:te,description:ne,authors:oe,color:ie,sourceUrl:se,API_URL:ae};const le={...y,onStart(){window.enmity.plugins.disablePlugin(y.name),g.show({title:"Oh no!",body:"You have installed the old and deprecated version of ReviewDB. Please uninstall this plugin and install the new one.",confirmText:"Get the new version",cancelText:"Not now",onConfirm:()=>{window.enmity.plugins.installPlugin("https://raw.githubusercontent.com/StupidityDB/EnmityPlugin/master/dist/ReviewDB.js",({data:e})=>{e=="installed_plugin"||e=="overridden_plugin"?g.show({title:"Upgrade successful!",body:"The plugin has been successfully replaced. Would you like to reload Discord now?",confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{P()}}):g.show({title:"Error",body:`Something went wrong while updating ${y.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{k.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${y.name}%20Upgrade%20Error%3A%20${y.version}`)}})})}})},onStop(){},getSettingsPanel({settings:e}){return n.createElement(Q,{manifest:y,settings:e,hasToasts:!1,commands:null})}};U(le);
