function Y(e){window.enmity.plugins.registerPlugin(e)}const u=window.enmity.modules.common.Constants;window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars;const f=window.enmity.modules.common.Native,n=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher;const _=window.enmity.modules.common.Storage,v=window.enmity.modules.common.Toasts,x=window.enmity.modules.common.Dialog;window.enmity.modules.common.Token;const B=window.enmity.modules.common.REST;window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking;const R=window.enmity.modules.common.StyleSheet;window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes;const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList;const j=o.Image;o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl;const Z=o.ScrollView;o.SectionList,o.StatusBar,o.StyleSheet,o.Switch;const g=o.Text;o.TextInput,o.TouchableHighlight;const b=o.TouchableOpacity;o.TouchableWithoutFeedback,o.Touchable;const h=o.View;o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox;const p=o.FormDivider;o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const l=o.FormRow,F=o.FormSection;o.FormSelect,o.FormSubLabel;const H=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;const S={byProps:(...e)=>window.enmity.modules.filters.byProps(...e),byName:(e,t)=>window.enmity.modules.filters.byName(e,t),byTypeName:(e,t)=>window.enmity.modules.filters.byTypeName(e,t),byDisplayName:(e,t)=>window.enmity.modules.filters.byDisplayName(e,t)};function N(...e){return window.enmity.modules.bulk(...e)}function q(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;const U=e=>{let t=0;for(let i in e)t++;return t};function s(e){return window.enmity.assets.getIDByName(e)}const m={Debug:s("debug"),Retry:s("ic_message_retry"),Failed:s("Small"),Cancel:s("ic_megaphone_nsfw_16px"),Add:s("add_white"),Delete:s("ic_message_delete"),Clear:s("ic_clear_all_24px"),Pencil:s("ic_pencil_24px"),Success:s("ic_selection_checked_24px"),Warning:s("ic_warning_24px"),Copy:s("toast_copy_link"),Open:s("ic_leave_stage"),Clipboard:s("pending-alert"),Initial:s("coffee"),Shield:s("ic_person_shield"),Debug_Command:{Sent:s("ic_application_command_24px"),Clock:s("clock")},Settings:{Toasts:{Context:s("toast_image_saved"),Settings:s("ic_selection_checked_24px")},Self:s("friends_toast_icon"),Share:s("share"),Robot:s("ic_robot_24px"),Commands:s("ic_profile_badge_bot_commands"),Debug:s("ic_rulebook_16px")}},L=e=>{v.open({content:`Copied ${e} to clipboard.`,source:m.Clipboard})},J=e=>{let t=e.split(`
`).map(i=>{if(i!="")return`"${i.replaceAll(":",'":"').replace(" ","")}",`});return t[0]=`{${t[0]}`,t[U(t)]=`${t[U(t)]}}`,t=t.join(""),t=t.replaceAll("undefined",""),t=t.split("").reverse().join("").replace(",","").split("").reverse().join(""),t};async function K(){try{let e=await _.getItem("device_list");if(e)return JSON.parse(e);let t=(await B.get("https://gist.githubusercontent.com/adamawolf/3048717/raw/1ee7e1a93dff9416f6ff34dd36b0ffbad9b956e9/Apple_mobile_device_types.txt")).text,i=J(t);await _.setItem("device_list",i);let r=await _.getItem("device_list");return JSON.parse(r)}catch(e){console.warn(`[SpinsPlugins Local Error \u2014 Issue when getting devices: ${e}]`);return}}async function X(e,t,i){let r=await K();return`**[${e}] Debug Information**
> **Plugin Version:** ${t}
> **Plugin Build:** ${i.split("-")[1]}
> **Discord Build:** ${f.InfoDictionaryManager.Version} (${f.InfoDictionaryManager.Build})
> **Software Version:** ${f.DCDDeviceManager.systemVersion}
> **Device:** ${r[f.DCDDeviceManager.device]}`}const{native:y}=window.enmity;function Q(){y.reload()}y.version,y.build,y.device,y.version;const A=q("transitionToGuild");async function O({manifest:e}){const t=`${e.sourceUrl}?${Math.floor(Math.random()*1001)}.js`,i=await(await B.get(t)).text;let r=i.match(/\d\.\d\.\d+/g),a=i.match(/patch\-\d\.\d\.\d+/g);return!r||!a?C(e.name,e.version):(r=r[0],a=a[0],r!=e.version?M(t,r,a.split("-")[1],e,!1):a!=e.build?M(t,r,a.split("-")[1],e,!0):C(e.name,e.version))}const M=(e,t,i,r,a)=>{const d=a?i:t;x.show({title:"Update found",body:`A newer ${a?"build":"version"} is available for ${r.name}. ${a?`
The version will remain at ${t}, but the build will update to ${i}.`:""}
Would you like to install ${a?`build \`${i}\``:`version \`${t}\``}  now?`,confirmText:"Update",cancelText:"Not now",onConfirm:()=>ee(e,d,r,a)})},C=(e,t)=>{console.log(`[${e}] Plugin is on the latest version, which is ${t}`),v.open({content:`${e} is on latest version (${t})`,source:m.Success})};async function ee(e,t,i,r){window.enmity.plugins.installPlugin(e,({data:a})=>{a=="installed_plugin"||a=="overridden_plugin"?x.show({title:`Updated ${i.name}`,body:`Successfully updated to ${r?"build":"version"} \`${t}\`. 
Would you like to reload Discord now?`,confirmText:"Yep!",cancelText:"Not now",onConfirm:()=>{Q()}}):x.show({title:"Error",body:`Something went wrong while updating ${i.name}.`,confirmText:"Report this issue",cancelText:"Cancel",onConfirm:()=>{A.openURL(`https://github.com/spinfal/enmity-plugins/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D%20${i.name}%20Update%20Error%3A%20${r?`b${t}`:`v${t}`}`)}})})}const E=window.enmity.modules.common.Components.General.Animated,[D,te]=N(S.byProps("transitionToGuild"),S.byProps("setString")),c=R.createThemedStyleSheet({container:{paddingTop:30,paddingLeft:20,marginBottom:-5,flexDirection:"row"},text_container:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap"},image:{width:75,height:75,borderRadius:10},main_text:{opacity:.975,letterSpacing:.25,fontFamily:u.Fonts.DISPLAY_NORMAL},header:{color:u.ThemeColorMap.HEADER_PRIMARY,fontFamily:u.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},sub_header:{color:u.ThemeColorMap.HEADER_SECONDARY,opacity:.975,fontSize:12.75}});var ne=({manifest:e})=>{const t=n.useRef(new E.Value(1)).current,i=()=>{E.spring(t,{toValue:1.1,duration:250,useNativeDriver:!0}).start()},r=()=>{E.spring(t,{toValue:1,duration:250,useNativeDriver:!0}).start()},a=()=>{D.openURL("https://spin.rip/")},d={transform:[{scale:t}]};return n.createElement(n.Fragment,null,n.createElement(h,{style:c.container},n.createElement(b,{onPress:a,onPressIn:i,onPressOut:r},n.createElement(E.View,{style:[d]},n.createElement(j,{style:[c.image],source:{uri:"https://cdn.spin.rip/r/l9uevwe4ia0.jpg"}}))),n.createElement(h,{style:c.text_container},n.createElement(b,{onPress:()=>{D.openURL(e.sourceUrl)}},n.createElement(g,{style:[c.main_text,c.header]},e.name," ")),n.createElement(h,{style:{flexDirection:"row"}},n.createElement(g,{style:[c.main_text,c.sub_header]},"A plugin by"),n.createElement(b,{onPress:()=>{D.openURL("https://spin.rip/")}},n.createElement(g,{style:[c.main_text,c.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.authors[0].name))),n.createElement(h,{style:{flexDirection:"row"}},n.createElement(g,{style:[c.main_text,c.sub_header]},"Settings page by"),n.createElement(b,{onPress:()=>{D.openURL("https://github.com/acquitelol/")}},n.createElement(g,{style:[c.main_text,c.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},"Rosie<3"))),n.createElement(h,null,n.createElement(b,{style:{flexDirection:"row"},onPress:()=>{te.setString(`**${e.name}** v${e.version}`),L("plugin name and version")}},n.createElement(g,{style:[c.main_text,c.sub_header]},"Version:"),n.createElement(g,{style:[c.main_text,c.sub_header,{paddingLeft:4,fontFamily:u.Fonts.DISPLAY_BOLD}]},e.version," "))))))};const[oe,V]=N(S.byProps("transitionToGuild","openURL"),S.byProps("setString","getString")),w=R.createThemedStyleSheet({bottom_padding:{paddingBottom:25},icon:{color:u.ThemeColorMap.INTERACTIVE_NORMAL},item:{color:u.ThemeColorMap.TEXT_MUTED},text_container:{display:"flex",flexDirection:"column"}});var se=({manifest:e,settings:t,hasToasts:i,children:r,commands:a})=>n.createElement(Z,null,n.createElement(ne,{manifest:e}),r,a&&n.createElement(F,{title:"Plugin Commands"},a.map(d=>n.createElement(l,{label:`/${d.name}`,subLabel:d.description,leading:n.createElement(l.Icon,{style:w.icon,source:m.Settings.Commands}),trailing:l.Arrow,onPress:function(){V.setString(`/${d.name}`),L(`the command ${d.name}`)}}))),n.createElement(F,{title:"Utility"},i&&n.createElement(n.Fragment,null,n.createElement(l,{label:"Initialization Toasts",leading:n.createElement(l.Icon,{style:w.icon,source:m.Settings.Toasts.Context}),subLabel:`If available, show toasts when ${e.name} is starting`,trailing:n.createElement(H,{value:t.getBoolean(`${e.name}-toastEnable`,!1),onValueChange:()=>{t.toggle(`${e.name}-toastEnable`,!1),v.open({content:`Successfully ${t.getBoolean(`${e.name}-toastEnable`,!1)?"enabled":"disabled"} initialization toasts.`,source:m.Success})}})}),n.createElement(p,null)),n.createElement(l,{label:"Copy Debug Info",subLabel:`Copy useful debug information of ${e.name} to clipboard.`,leading:n.createElement(l.Icon,{style:w.icon,source:m.Settings.Debug}),trailing:l.Arrow,onPress:async function(){V.setString(await X(e.name,e.version,e.build)),L("plugin debug information")}}),n.createElement(p,null),n.createElement(l,{label:"Clear Device List Cache",subLabel:"Remove the fetched device list storage. This will not clear Discord's or your iDevice's cache.",leading:n.createElement(l.Icon,{style:w.icon,source:m.Delete}),trailing:l.Arrow,onPress:async function(){await _.removeItem("device_list"),v.open({content:"Cleared device list storage.",source:m.Success})}})),n.createElement(F,{title:"Source"},n.createElement(l,{label:"Check for Updates",subLabel:`Check for any plugin updates for ${e.name}.`,leading:n.createElement(l.Icon,{style:w.icon,source:m.Copy}),trailing:l.Arrow,onPress:()=>{O({manifest:e})}}),n.createElement(p,null),n.createElement(l,{label:"Source",subLabel:`View ${e.name} source code`,leading:n.createElement(l.Icon,{style:w.icon,source:m.Open}),trailing:l.Arrow,onPress:()=>{oe.openURL(`https://github.com/spinfal/enmity-plugins/tree/master/${e.name}`)}})),n.createElement(l,{style:w.bottom_padding,label:`Plugin Version: ${e.version}
Plugin Build: ${e.build.split("-").pop()}`})),ie="ZenWars",re="0.0.1",ae="1",le="ZenWars plugin",ce=[{name:"moyllo",id:"1097401815496134687"}],me="#33FFBD",ue="https://raw.githubusercontent.com/spinfal/enmity-plugins/master/dist/ZenWars.js",k={name:ie,version:re,build:ae,description:le,authors:ce,color:me,sourceUrl:ue},T;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.Guild=1]="Guild",e[e.DM=2]="DM"})(T||(T={}));var I;(function(e){e[e.Chat=1]="Chat",e[e.User=2]="User",e[e.Message=3]="Message"})(I||(I={}));var P;(function(e){e[e.BuiltIn=0]="BuiltIn",e[e.BuiltInText=1]="BuiltInText",e[e.BuiltInIntegration=2]="BuiltInIntegration",e[e.Bot=3]="Bot",e[e.Placeholder=4]="Placeholder"})(P||(P={}));var W;(function(e){e[e.Role=1]="Role",e[e.User=2]="User"})(W||(W={}));var $;(function(e){e[e.SubCommand=1]="SubCommand",e[e.SubCommandGroup=2]="SubCommandGroup",e[e.String=3]="String",e[e.Integer=4]="Integer",e[e.Boolean=5]="Boolean",e[e.User=6]="User",e[e.Channel=7]="Channel",e[e.Role=8]="Role",e[e.Mentionnable=9]="Mentionnable",e[e.Number=10]="Number",e[e.Attachment=11]="Attachment"})($||($={}));var G;(function(e){e[e.ApplicationCommand=2]="ApplicationCommand",e[e.MessageComponent=3]="MessageComponent"})(G||(G={}));const de={id:"zenwars-command",name:"zenwars",displayName:"ZenWars",description:"ZenWars description",displayDescription:"ZenWars displaydescription",type:I.Chat,inputType:P.BuiltInText,options:[{name:"url",displayName:"url",description:"The URL of the image to petpet",displayDescription:"The URL of the image to petpet",type:$.String,required:!1},{name:"whisper",displayName:"whisper",description:"Only you can see the result",displayDescription:"Only you can see the result",type:$.Boolean,required:!1}],execute:async function(e,t){}},z=[de],ge={...k,onStart(){this.commands=z},onStop(){this.commands=[]},patches:[],getSettingsPanel({settings:e}){return n.createElement(se,{manifest:k,settings:e,hasToasts:!1,commands:z})}};Y(ge);
